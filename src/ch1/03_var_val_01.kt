package ch1

fun main() {
    /**
     * 1. 변수
     *
     * val : 한 번 값을 할당한 후 변경할 수 없는 불변 변수. 자바의 final 변수와 유사하다.
     *
     * var : 언제든지 값을 변경할 수 있는 가변 변수입니다. 자바의 일반 변수와 같은 개념이라고 보면된다.
     */
    val pi: Double = 3.14 // val 변수명: 자료형 = 값 
    // pi 변수는 불변 변수
    // 코틀린의 기본 자료형은 대문자로 시작한다.

    // 자료형 선언
    // 자료형을 앞에 쓰던 자바와는 다르게 코틀린은 변수명을 먼저 쓰고, 콜론 : 을 쓴 후 자료형을 명시.
    // 문맥상 추론이 가능하다면 자료형을 생략할 수 있음. 이를 코틀린의 형추론이라고도 함.
    val name = "tom" // String 으로 형 추론.

    // 선언만 하고 나중에 값 할당하기
    // 코틀린에서는 변수를 선언만 하고 값을 나중에 할당 할 수 있다.
    // 그러나 이때 형을 명신해야만 한다.
    // 이를 통해 자료형을 컴파일 타임에 명확히 할 수 있다.
    val name2: String // String 으로 형으로 추론되어 오류가 안뜸 // 이렇게 선언만하고 할당을 안할때도 타입을 명시해야 오류안뜸
//    val name3 // name3 변수가 어떤 타입으로 올 지 알 수 없어서 오류가 뜸

    // val 은 값을 변경할 수 없는 변수이므로 값을 재할당을 하면 다음과 같이 컴파일 오류가 남.
//    pi = .31415923 // 오류 Val cannot be reassigned

    println(name)
//    println(name2)
    // 값을 변경하고 싶을 떄는 var 을 사용해야 됨. var로 정의된 변수는 값을 바꿀 수 있음.

    /**
     * 형 추론 (Type Inference)
     *
     * 코틀린에서는 변수 선언 시 자료형을 명시하지 않더라도 컴파일러가 형을 추론할 수 있다.
     */
    var age = 21 // 형추론 Int
    var leagueOfLegend = "faker" // 형추론 String
    // age 변수는 가변 변수
    println(age) // 21
    println(leagueOfLegend)


    /**
     * 변수 값 재할당
     * val 로 선언된 변수는 값이 한 번 할당된 후 변경할 수 없다.
     * 자바의 final 키워드와 비슷하다.
     *
     * var로 선언된 변수는 언제든지 값이 변경될 수 있다.
     */
    age = 25 // 변수 값 재 할당
    println(age) // 25

}